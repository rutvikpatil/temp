# -*- coding: utf-8 -*-
"""Data _preprocessing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1beFw8yxfid4PeGLyTGpfYGvnTLFDdhS7

# Data Pre-Processing

### 1. Rescaling Data
"""

import pandas, scipy, numpy
from sklearn.preprocessing import MinMaxScaler
df=pandas.read_csv('http://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/winequality-red.csv ',sep=';')
array=df.values

#Separating Data into input and output components
x=array[:,0:8]
y=array[:,8]
scaler=MinMaxScaler(feature_range=(0,1))
rescaled=scaler.fit_transform(x)
numpy.set_printoptions(precision=3)

rescaled[0:5,:]

"""### 2. Standardizing Data"""

from sklearn.preprocessing import StandardScaler
scaler=StandardScaler().fit(x)
rescaledX=scaler.transform(x)
rescaledX[0:5,:]

"""### 3.Normalizing Data"""

from sklearn.preprocessing import Normalizer
scaler=Normalizer().fit(x)
normalizedX=scaler.transform(x)
normalizedX[0:5,:]

"""### 4. Binarizing Data"""

from sklearn.preprocessing import Binarizer
binarizer= Binarizer(threshold=0.0).fit(x)
binaryX=binarizer.transform(x)
binaryX[0:5,:]

"""### 5. Mean Removal"""

from sklearn.preprocessing import scale
data_standardized=scale(df)
data_standardized.mean(axis=0)

"""### 6. One Hot Encoding"""

from sklearn.preprocessing import OneHotEncoder
encoder=OneHotEncoder()
encoder.fit([[0,1,6,2],[1,5,3,5],[2,4,2,7],[1,0,4,2]])

encoder.transform([[2,4,3,4]]).toarray()

"""### 7. Label Encoding"""

from sklearn.preprocessing import LabelEncoder
label_encoder= LabelEncoder()
input_classes=['Havells','Philips','Syska','Lloyd','Everready']
label_encoder.fit(input_classes)
for i,item in enumerate(label_encoder.classes_):
    print(item,'--->',i)

labels=['Lloyd','Syska','Philips']
label_encoder.transform(labels)

label_encoder.inverse_transform(label_encoder.transform(labels))

"""# Analysing Data"""

df.describe()

df.shape

df.head(5)

df.groupby('quality').size()

"""# Data Visualizing - Univariate Plots"""

# HISTOGRAM
import matplotlib.pyplot as plt 
df.hist()
plt.show()

# DENSITY PLOT
df.plot(kind='density',subplots=True,sharex=False)
plt.show()

# BOX AND WHISKER PLOTS 
df.plot(kind='box',subplots=True, sharex=False, sharey=False)
plt.show()

"""#  Data Visualising - Multivariate Plots

### 1. Correlation Plot
"""

correlations=df.corr()
fig=plt.figure()
ax=fig.add_subplot(111)
cax=ax.matshow(correlations,vmin=-1,vmax=1)
fig.colorbar(cax)

ticks=numpy.arange(0,9,1)
ax.set_xticks(ticks)
ax.set_yticks(ticks)
plt.show()

"""### 2. Scatter Plot"""

pandas.plotting.scatter_matrix(df)

