# -*- coding: utf-8 -*-
"""Data_Wrangling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SOtXUHoYDckvx6g2ZarGBMstaX-r6wFx

### Python Dataframes
"""

import pandas as pd
import numpy as np

one=pd.DataFrame({'emp_id':[1,2,3,4,5],'dept_name':['duvet','bidet','footwear','clothing','electronics'],'aisle':[1,2,3,4,5]})
first=pd.DataFrame(one)
two=pd.DataFrame({'emp_id':[6,7,8,9,10],'dept_name':['grocery','toys','laundry','frozen','stationery'],'aisle':[6,2,2,9,10]})
second=pd.DataFrame(two)

"""### Data Wrangling"""

three=pd.read_csv('C:/Users/Khushbu Upadhyay/Desktop/Supermarket.csv')

three.head(5)

three.isnull().any()

three.dropna()

"""### Grouping Data"""

second.aisle.unique()

len(second)

"""### Filtering Data"""

second[second['aisle'] > 3]

second[second['aisle']== 2]

second[(second['aisle']==2) & (second['dept_name']== 'laundry') ]

second.describe()

#Filtering through values 
two[two.aisle.isin([2,7,9])]

"""### Pivoting Dataset"""

second.pivot(index='emp_id', columns='aisle')

#Shifting - shift the DataFrameâ€™s index by a certain number of periods using the shift() method
second.pivot(index='emp_id',columns='aisle').shift(1)

#Melting a dataset- i.e unpivot it
second.melt(id_vars=['emp_id'], value_name='dept_name')

#Merging Melt Dataset
melt1= second.melt(id_vars=['emp_id'],value_name='dept_name')
melt2= second.melt(id_vars=['emp_id'],value_name='aisle')
melt3= pd.merge(melt1,melt2,on='emp_id')
melt3

"""### Analytical Base Table"""

from functools import reduce
base=two[['aisle','dept_name','emp_id']]
feature=[base]+[melt1,melt2]
abt=reduce(lambda left,right: pd.merge(left,right,on=['emp_id']),[melt1,melt2])
abt

"""### Concatinating Data"""

pd.concat([one,two])

"""### Aggregating Data"""

df=pd.DataFrame(np.random.randn(7,3),index=pd.date_range('1/1/2000',periods=7),
  columns=['A','B','C'])

df

#Aggregating entire DataFrame
r=df.rolling(window=3,min_periods=1)
r.aggregate(np.sum)

r.aggregate(np.max)

#Aggregating only one column
r['B'].aggregate(np.mean)

#Aggregating Multiple Columns
r[['B','C']].aggregate(np.sum)

"""### Exporting Dataset"""

res=pd.concat([one,two])
res.to_excel('res.xlsx')

