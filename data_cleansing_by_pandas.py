# -*- coding: utf-8 -*-
"""Data Cleansing by Pandas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aybPhSyNQ7fbQ_bNfMejGNYRWiOiI2P0
"""

import numpy as np
np.array(['a','b','c','d','e'],ndmin=2)

b=np.array([[1,2,3],[4,5,6]])
b

np.sort(np.array([[3,2,1],[5,2,4]]))

import pandas as pd
data={'Element':['Silver','Gold','Platinum','Copper'],'Atomic Number':[47,79,78,29]}
frame=pd.DataFrame(data,index=['element 1','element 2','element 3','element 4'])
frame

"""### Panel"""

data={'Red':pd.DataFrame(np.random.randn(4,2)),
  'Blue':pd.DataFrame(np.random.randn(4,3))}
pd.Panel(data)

"""### Series"""

data=np.array([1,2,3,3,4])
pd.Series(data)

pd.Series(np.array(['a','c','b']))

frame.iloc[0:2,:]

frame.describe()

frame.rank()

"""### Python Data Cleansing"""

frame=pd.DataFrame(np.random.randn(4,3),index=[1,2,4,7],columns=['A','B','C'])
frame.reindex([1,2,3,4,5,6,7])

#Finding which columns have missing values
frame=frame.reindex([1,2,3,4,5,6,7])
frame['B'].isnull()

"""### Dropping Missing Values"""

frame.dropna()

"""### Replacing Missing Values"""

from numpy import NaN
frame.replace({NaN:0.00})

"""### Replacing with Scalar Values"""

frame.fillna(7)

"""### Filling Forward or Backward"""

frame.fillna(method='pad')

frame.fillna(method='backfill')

"""### Other Options"""

data={'Element':['Silver','Gold','Platinum','Copper'],'Atomic Number':[47,79,78,29]}
frame=pd.DataFrame(data,index=['element 1','element 2','element 3','element 4'])
frame

frame.head()

frame.tail(3)

#Renaming Columns
frame.rename(columns={'Atomic Number':'Number','Element':'Name'},inplace=True)
frame

# Making changes inplace=True

